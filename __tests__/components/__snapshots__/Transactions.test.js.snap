exports[`test The component matches the snapshot 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function buildPredicate],
    "childrenOfNode": [Function childrenOfNode],
    "findWhereUnwrapped": [Function findWhereUnwrapped]
  },
  "length": 1,
  "node": <section
    className="transactions">
    <h2>
        Transactions 
        <function (props, context, updater) {
              // This constructor gets overridden by mocks. The argument is used
              // by mocks to assert on what gets mounted.
        
              if (process.env.NODE_ENV !== 'production') {
                warning(
                  this instanceof Constructor,
                  'Something is calling a React component directly. Use a factory or ' +
                    'JSX instead. See: https://fb.me/react-legacyfactory'
                );
              }
        
              // Wire up auto-binding
              if (this.__reactAutoBindPairs.length) {
                bindAutoBindMethods(this);
              }
        
              this.props = props;
              this.context = context;
              this.refs = emptyObject;
              this.updater = updater || ReactNoopUpdateQueue;
        
              this.state = null;
        
              // ReactClasses doesn't have constructors. Instead, they use the
              // getInitialState and componentWillMount methods for initialization.
        
              var initialState = this.getInitialState ? this.getInitialState() : null;
              if (process.env.NODE_ENV !== 'production') {
                // We allow auto-mocks to proceed as if they're returning null.
                if (
                  initialState === undefined &&
                  this.getInitialState._isMockFunction
                ) {
                  // This is probably bad practice. Consider warning here and
                  // deprecating this convenience.
                  initialState = null;
                }
              }
              _invariant(
                typeof initialState === 'object' && !Array.isArray(initialState),
                '%s.getInitialState(): must return an object or null',
                Constructor.displayName || 'ReactCompositeComponent'
              );
        
              this.state = initialState;
            }
            className="actionlink"
            onlyActiveOnIndex={false}
            style={Object {}}
            to="/transactions/add">
            Add new transaction
        </function (props, context, updater) {
              // This constructor gets overridden by mocks. The argument is used
              // by mocks to assert on what gets mounted.
        
              if (process.env.NODE_ENV !== 'production') {
                warning(
                  this instanceof Constructor,
                  'Something is calling a React component directly. Use a factory or ' +
                    'JSX instead. See: https://fb.me/react-legacyfactory'
                );
              }
        
              // Wire up auto-binding
              if (this.__reactAutoBindPairs.length) {
                bindAutoBindMethods(this);
              }
        
              this.props = props;
              this.context = context;
              this.refs = emptyObject;
              this.updater = updater || ReactNoopUpdateQueue;
        
              this.state = null;
        
              // ReactClasses doesn't have constructors. Instead, they use the
              // getInitialState and componentWillMount methods for initialization.
        
              var initialState = this.getInitialState ? this.getInitialState() : null;
              if (process.env.NODE_ENV !== 'production') {
                // We allow auto-mocks to proceed as if they're returning null.
                if (
                  initialState === undefined &&
                  this.getInitialState._isMockFunction
                ) {
                  // This is probably bad practice. Consider warning here and
                  // deprecating this convenience.
                  initialState = null;
                }
              }
              _invariant(
                typeof initialState === 'object' && !Array.isArray(initialState),
                '%s.getInitialState(): must return an object or null',
                Constructor.displayName || 'ReactCompositeComponent'
              );
        
              this.state = initialState;
            }>
    </h2>
    <table
        className="financials -transactions">
        <thead>
            <tr>
                <th
                    className=" filterable"
                    data-orderby="name-asc"
                    onClick={[Function bound orderBy]}>
                    Name
                </th>
                <th
                    className="activefilter"
                    data-orderby="date-desc"
                    onClick={[Function bound orderBy]}>
                    Date
                </th>
                <th
                    className=""
                    data-orderby="amount-asc"
                    onClick={[Function bound orderBy]}>
                    Amount
                </th>
                <th
                    className="actions nobor">
                     
                </th>
                <th
                    className="actions nobor">
                     
                </th>
            </tr>
        </thead>
        <tbody>
            <function Connect(props, context) {
                    _classCallCheck(this, Connect);
            
                    var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));
            
                    _this.version = version;
                    _this.store = props.store || context.store;
            
                    (0, _invariant2["default"])(_this.store, 'Could not find "store" in either the context or ' + ('props of "' + connectDisplayName + '". ') + 'Either wrap the root component in a <Provider>, ' + ('or explicitly pass "store" as a prop to "' + connectDisplayName + '".'));
            
                    var storeState = _this.store.getState();
                    _this.state = { storeState: storeState };
                    _this.clearCache();
                    return _this;
                  }
                transaction={
                    Object {
                        "__v": 0,
                        "_id": "58890108df9d3e0905a2d605",
                        "amount": 6.25,
                        "date": "2017-05-25T00:00:00.000Z",
                        "name": "Monmouth Coffee",
                        "user": "58c2a33cc6cd5a5d15a8fc0c"
                      }
                }
                transactions={
                    Array [
                        Object {
                          "__v": 0,
                          "_id": "588900efdf9d3e0905a2d604",
                          "amount": 4.5,
                          "date": "2017-05-01T00:00:00.000Z",
                          "name": "Cashew Nuts",
                          "user": "58c2a33cc6cd5a5d15a8fc0c"
                        },
                        Object {
                          "__v": 0,
                          "_id": "58890108df9d3e0905a2d605",
                          "amount": 6.25,
                          "date": "2017-05-25T00:00:00.000Z",
                          "name": "Monmouth Coffee",
                          "user": "58c2a33cc6cd5a5d15a8fc0c"
                        },
                        Object {
                          "__v": 0,
                          "_id": "588b67fbada9d2040bee4ef4",
                          "amount": 399,
                          "date": "2017-02-27T00:00:00.000Z",
                          "name": "Flight to Copenhagen",
                          "user": "58c2a33cc6cd5a5d15a8fc0c"
                        }
                      ]
                } />
            <function Connect(props, context) {
                    _classCallCheck(this, Connect);
            
                    var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));
            
                    _this.version = version;
                    _this.store = props.store || context.store;
            
                    (0, _invariant2["default"])(_this.store, 'Could not find "store" in either the context or ' + ('props of "' + connectDisplayName + '". ') + 'Either wrap the root component in a <Provider>, ' + ('or explicitly pass "store" as a prop to "' + connectDisplayName + '".'));
            
                    var storeState = _this.store.getState();
                    _this.state = { storeState: storeState };
                    _this.clearCache();
                    return _this;
                  }
                transaction={
                    Object {
                        "__v": 0,
                        "_id": "588900efdf9d3e0905a2d604",
                        "amount": 4.5,
                        "date": "2017-05-01T00:00:00.000Z",
                        "name": "Cashew Nuts",
                        "user": "58c2a33cc6cd5a5d15a8fc0c"
                      }
                }
                transactions={
                    Array [
                        Object {
                          "__v": 0,
                          "_id": "588900efdf9d3e0905a2d604",
                          "amount": 4.5,
                          "date": "2017-05-01T00:00:00.000Z",
                          "name": "Cashew Nuts",
                          "user": "58c2a33cc6cd5a5d15a8fc0c"
                        },
                        Object {
                          "__v": 0,
                          "_id": "58890108df9d3e0905a2d605",
                          "amount": 6.25,
                          "date": "2017-05-25T00:00:00.000Z",
                          "name": "Monmouth Coffee",
                          "user": "58c2a33cc6cd5a5d15a8fc0c"
                        },
                        Object {
                          "__v": 0,
                          "_id": "588b67fbada9d2040bee4ef4",
                          "amount": 399,
                          "date": "2017-02-27T00:00:00.000Z",
                          "name": "Flight to Copenhagen",
                          "user": "58c2a33cc6cd5a5d15a8fc0c"
                        }
                      ]
                } />
            <function Connect(props, context) {
                    _classCallCheck(this, Connect);
            
                    var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));
            
                    _this.version = version;
                    _this.store = props.store || context.store;
            
                    (0, _invariant2["default"])(_this.store, 'Could not find "store" in either the context or ' + ('props of "' + connectDisplayName + '". ') + 'Either wrap the root component in a <Provider>, ' + ('or explicitly pass "store" as a prop to "' + connectDisplayName + '".'));
            
                    var storeState = _this.store.getState();
                    _this.state = { storeState: storeState };
                    _this.clearCache();
                    return _this;
                  }
                transaction={
                    Object {
                        "__v": 0,
                        "_id": "588b67fbada9d2040bee4ef4",
                        "amount": 399,
                        "date": "2017-02-27T00:00:00.000Z",
                        "name": "Flight to Copenhagen",
                        "user": "58c2a33cc6cd5a5d15a8fc0c"
                      }
                }
                transactions={
                    Array [
                        Object {
                          "__v": 0,
                          "_id": "588900efdf9d3e0905a2d604",
                          "amount": 4.5,
                          "date": "2017-05-01T00:00:00.000Z",
                          "name": "Cashew Nuts",
                          "user": "58c2a33cc6cd5a5d15a8fc0c"
                        },
                        Object {
                          "__v": 0,
                          "_id": "58890108df9d3e0905a2d605",
                          "amount": 6.25,
                          "date": "2017-05-25T00:00:00.000Z",
                          "name": "Monmouth Coffee",
                          "user": "58c2a33cc6cd5a5d15a8fc0c"
                        },
                        Object {
                          "__v": 0,
                          "_id": "588b67fbada9d2040bee4ef4",
                          "amount": 399,
                          "date": "2017-02-27T00:00:00.000Z",
                          "name": "Flight to Copenhagen",
                          "user": "58c2a33cc6cd5a5d15a8fc0c"
                        }
                      ]
                } />
        </tbody>
    </table>
</section>,
  "nodes": Array [
    <section
      className="transactions">
      <h2>
            Transactions 
            <function (props, context, updater) {
                  // This constructor gets overridden by mocks. The argument is used
                  // by mocks to assert on what gets mounted.
            
                  if (process.env.NODE_ENV !== 'production') {
                    warning(
                      this instanceof Constructor,
                      'Something is calling a React component directly. Use a factory or ' +
                        'JSX instead. See: https://fb.me/react-legacyfactory'
                    );
                  }
            
                  // Wire up auto-binding
                  if (this.__reactAutoBindPairs.length) {
                    bindAutoBindMethods(this);
                  }
            
                  this.props = props;
                  this.context = context;
                  this.refs = emptyObject;
                  this.updater = updater || ReactNoopUpdateQueue;
            
                  this.state = null;
            
                  // ReactClasses doesn't have constructors. Instead, they use the
                  // getInitialState and componentWillMount methods for initialization.
            
                  var initialState = this.getInitialState ? this.getInitialState() : null;
                  if (process.env.NODE_ENV !== 'production') {
                    // We allow auto-mocks to proceed as if they're returning null.
                    if (
                      initialState === undefined &&
                      this.getInitialState._isMockFunction
                    ) {
                      // This is probably bad practice. Consider warning here and
                      // deprecating this convenience.
                      initialState = null;
                    }
                  }
                  _invariant(
                    typeof initialState === 'object' && !Array.isArray(initialState),
                    '%s.getInitialState(): must return an object or null',
                    Constructor.displayName || 'ReactCompositeComponent'
                  );
            
                  this.state = initialState;
                }
                  className="actionlink"
                  onlyActiveOnIndex={false}
                  style={Object {}}
                  to="/transactions/add">
                  Add new transaction
            </function (props, context, updater) {
                  // This constructor gets overridden by mocks. The argument is used
                  // by mocks to assert on what gets mounted.
            
                  if (process.env.NODE_ENV !== 'production') {
                    warning(
                      this instanceof Constructor,
                      'Something is calling a React component directly. Use a factory or ' +
                        'JSX instead. See: https://fb.me/react-legacyfactory'
                    );
                  }
            
                  // Wire up auto-binding
                  if (this.__reactAutoBindPairs.length) {
                    bindAutoBindMethods(this);
                  }
            
                  this.props = props;
                  this.context = context;
                  this.refs = emptyObject;
                  this.updater = updater || ReactNoopUpdateQueue;
            
                  this.state = null;
            
                  // ReactClasses doesn't have constructors. Instead, they use the
                  // getInitialState and componentWillMount methods for initialization.
            
                  var initialState = this.getInitialState ? this.getInitialState() : null;
                  if (process.env.NODE_ENV !== 'production') {
                    // We allow auto-mocks to proceed as if they're returning null.
                    if (
                      initialState === undefined &&
                      this.getInitialState._isMockFunction
                    ) {
                      // This is probably bad practice. Consider warning here and
                      // deprecating this convenience.
                      initialState = null;
                    }
                  }
                  _invariant(
                    typeof initialState === 'object' && !Array.isArray(initialState),
                    '%s.getInitialState(): must return an object or null',
                    Constructor.displayName || 'ReactCompositeComponent'
                  );
            
                  this.state = initialState;
                }>
      </h2>
      <table
            className="financials -transactions">
            <thead>
                  <tr>
                        <th
                              className=" filterable"
                              data-orderby="name-asc"
                              onClick={[Function bound orderBy]}>
                              Name
                        </th>
                        <th
                              className="activefilter"
                              data-orderby="date-desc"
                              onClick={[Function bound orderBy]}>
                              Date
                        </th>
                        <th
                              className=""
                              data-orderby="amount-asc"
                              onClick={[Function bound orderBy]}>
                              Amount
                        </th>
                        <th
                              className="actions nobor">
                               
                        </th>
                        <th
                              className="actions nobor">
                               
                        </th>
                  </tr>
            </thead>
            <tbody>
                  <function Connect(props, context) {
                          _classCallCheck(this, Connect);
                  
                          var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));
                  
                          _this.version = version;
                          _this.store = props.store || context.store;
                  
                          (0, _invariant2["default"])(_this.store, 'Could not find "store" in either the context or ' + ('props of "' + connectDisplayName + '". ') + 'Either wrap the root component in a <Provider>, ' + ('or explicitly pass "store" as a prop to "' + connectDisplayName + '".'));
                  
                          var storeState = _this.store.getState();
                          _this.state = { storeState: storeState };
                          _this.clearCache();
                          return _this;
                        }
                        transaction={
                              Object {
                                    "__v": 0,
                                    "_id": "58890108df9d3e0905a2d605",
                                    "amount": 6.25,
                                    "date": "2017-05-25T00:00:00.000Z",
                                    "name": "Monmouth Coffee",
                                    "user": "58c2a33cc6cd5a5d15a8fc0c"
                                  }
                        }
                        transactions={
                              Array [
                                    Object {
                                      "__v": 0,
                                      "_id": "588900efdf9d3e0905a2d604",
                                      "amount": 4.5,
                                      "date": "2017-05-01T00:00:00.000Z",
                                      "name": "Cashew Nuts",
                                      "user": "58c2a33cc6cd5a5d15a8fc0c"
                                    },
                                    Object {
                                      "__v": 0,
                                      "_id": "58890108df9d3e0905a2d605",
                                      "amount": 6.25,
                                      "date": "2017-05-25T00:00:00.000Z",
                                      "name": "Monmouth Coffee",
                                      "user": "58c2a33cc6cd5a5d15a8fc0c"
                                    },
                                    Object {
                                      "__v": 0,
                                      "_id": "588b67fbada9d2040bee4ef4",
                                      "amount": 399,
                                      "date": "2017-02-27T00:00:00.000Z",
                                      "name": "Flight to Copenhagen",
                                      "user": "58c2a33cc6cd5a5d15a8fc0c"
                                    }
                                  ]
                        } />
                  <function Connect(props, context) {
                          _classCallCheck(this, Connect);
                  
                          var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));
                  
                          _this.version = version;
                          _this.store = props.store || context.store;
                  
                          (0, _invariant2["default"])(_this.store, 'Could not find "store" in either the context or ' + ('props of "' + connectDisplayName + '". ') + 'Either wrap the root component in a <Provider>, ' + ('or explicitly pass "store" as a prop to "' + connectDisplayName + '".'));
                  
                          var storeState = _this.store.getState();
                          _this.state = { storeState: storeState };
                          _this.clearCache();
                          return _this;
                        }
                        transaction={
                              Object {
                                    "__v": 0,
                                    "_id": "588900efdf9d3e0905a2d604",
                                    "amount": 4.5,
                                    "date": "2017-05-01T00:00:00.000Z",
                                    "name": "Cashew Nuts",
                                    "user": "58c2a33cc6cd5a5d15a8fc0c"
                                  }
                        }
                        transactions={
                              Array [
                                    Object {
                                      "__v": 0,
                                      "_id": "588900efdf9d3e0905a2d604",
                                      "amount": 4.5,
                                      "date": "2017-05-01T00:00:00.000Z",
                                      "name": "Cashew Nuts",
                                      "user": "58c2a33cc6cd5a5d15a8fc0c"
                                    },
                                    Object {
                                      "__v": 0,
                                      "_id": "58890108df9d3e0905a2d605",
                                      "amount": 6.25,
                                      "date": "2017-05-25T00:00:00.000Z",
                                      "name": "Monmouth Coffee",
                                      "user": "58c2a33cc6cd5a5d15a8fc0c"
                                    },
                                    Object {
                                      "__v": 0,
                                      "_id": "588b67fbada9d2040bee4ef4",
                                      "amount": 399,
                                      "date": "2017-02-27T00:00:00.000Z",
                                      "name": "Flight to Copenhagen",
                                      "user": "58c2a33cc6cd5a5d15a8fc0c"
                                    }
                                  ]
                        } />
                  <function Connect(props, context) {
                          _classCallCheck(this, Connect);
                  
                          var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));
                  
                          _this.version = version;
                          _this.store = props.store || context.store;
                  
                          (0, _invariant2["default"])(_this.store, 'Could not find "store" in either the context or ' + ('props of "' + connectDisplayName + '". ') + 'Either wrap the root component in a <Provider>, ' + ('or explicitly pass "store" as a prop to "' + connectDisplayName + '".'));
                  
                          var storeState = _this.store.getState();
                          _this.state = { storeState: storeState };
                          _this.clearCache();
                          return _this;
                        }
                        transaction={
                              Object {
                                    "__v": 0,
                                    "_id": "588b67fbada9d2040bee4ef4",
                                    "amount": 399,
                                    "date": "2017-02-27T00:00:00.000Z",
                                    "name": "Flight to Copenhagen",
                                    "user": "58c2a33cc6cd5a5d15a8fc0c"
                                  }
                        }
                        transactions={
                              Array [
                                    Object {
                                      "__v": 0,
                                      "_id": "588900efdf9d3e0905a2d604",
                                      "amount": 4.5,
                                      "date": "2017-05-01T00:00:00.000Z",
                                      "name": "Cashew Nuts",
                                      "user": "58c2a33cc6cd5a5d15a8fc0c"
                                    },
                                    Object {
                                      "__v": 0,
                                      "_id": "58890108df9d3e0905a2d605",
                                      "amount": 6.25,
                                      "date": "2017-05-25T00:00:00.000Z",
                                      "name": "Monmouth Coffee",
                                      "user": "58c2a33cc6cd5a5d15a8fc0c"
                                    },
                                    Object {
                                      "__v": 0,
                                      "_id": "588b67fbada9d2040bee4ef4",
                                      "amount": 399,
                                      "date": "2017-02-27T00:00:00.000Z",
                                      "name": "Flight to Copenhagen",
                                      "user": "58c2a33cc6cd5a5d15a8fc0c"
                                    }
                                  ]
                        } />
            </tbody>
      </table>
</section>
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance":  {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <function Transactions(props) {/* istanbul ignore next */_classCallCheck(this, Transactions);var _this = _possibleConstructorReturn(this, (Transactions.__proto__ || Object.getPrototypeOf(Transactions)).call(this,
    props));

    /* istanbul ignore next */_this.state = {
      orderBy: 'date-desc' };


    /* istanbul ignore next */_this.orderBy = /* istanbul ignore next */_this.orderBy.bind( /* istanbul ignore next */_this); /* istanbul ignore next */return _this;
  }
        transactions={
                Array [
                        Object {
                          "__v": 0,
                          "_id": "588900efdf9d3e0905a2d604",
                          "amount": 4.5,
                          "date": "2017-05-01T00:00:00.000Z",
                          "name": "Cashew Nuts",
                          "user": "58c2a33cc6cd5a5d15a8fc0c"
                        },
                        Object {
                          "__v": 0,
                          "_id": "58890108df9d3e0905a2d605",
                          "amount": 6.25,
                          "date": "2017-05-25T00:00:00.000Z",
                          "name": "Monmouth Coffee",
                          "user": "58c2a33cc6cd5a5d15a8fc0c"
                        },
                        Object {
                          "__v": 0,
                          "_id": "588b67fbada9d2040bee4ef4",
                          "amount": 399,
                          "date": "2017-02-27T00:00:00.000Z",
                          "name": "Flight to Copenhagen",
                          "user": "58c2a33cc6cd5a5d15a8fc0c"
                        }
                      ]
        } />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": Transactions {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "orderBy": [Function bound orderBy],
        "props": Object {
          "transactions": Array [
            Object {
              "__v": 0,
              "_id": "588900efdf9d3e0905a2d604",
              "amount": 4.5,
              "date": "2017-05-01T00:00:00.000Z",
              "name": "Cashew Nuts",
              "user": "58c2a33cc6cd5a5d15a8fc0c"
            },
            Object {
              "__v": 0,
              "_id": "58890108df9d3e0905a2d605",
              "amount": 6.25,
              "date": "2017-05-25T00:00:00.000Z",
              "name": "Monmouth Coffee",
              "user": "58c2a33cc6cd5a5d15a8fc0c"
            },
            Object {
              "__v": 0,
              "_id": "588b67fbada9d2040bee4ef4",
              "amount": 399,
              "date": "2017-02-27T00:00:00.000Z",
              "name": "Flight to Copenhagen",
              "user": "58c2a33cc6cd5a5d15a8fc0c"
            }
          ]
        },
        "refs": Object {},
        "state": Object {
          "orderBy": "date-desc"
        },
        "updater": Object {
          "enqueueCallback": [Function anonymous],
          "enqueueCallbackInternal": [Function anonymous],
          "enqueueElementInternal": [Function anonymous],
          "enqueueForceUpdate": [Function anonymous],
          "enqueueReplaceState": [Function anonymous],
          "enqueueSetState": [Function anonymous],
          "isMounted": [Function anonymous],
          "validateCallback": [Function anonymous]
        }
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <section
          className="transactions">
          <h2>
                    Transactions 
                    <function (props, context, updater) {
                          // This constructor gets overridden by mocks. The argument is used
                          // by mocks to assert on what gets mounted.
                    
                          if (process.env.NODE_ENV !== 'production') {
                            warning(
                              this instanceof Constructor,
                              'Something is calling a React component directly. Use a factory or ' +
                                'JSX instead. See: https://fb.me/react-legacyfactory'
                            );
                          }
                    
                          // Wire up auto-binding
                          if (this.__reactAutoBindPairs.length) {
                            bindAutoBindMethods(this);
                          }
                    
                          this.props = props;
                          this.context = context;
                          this.refs = emptyObject;
                          this.updater = updater || ReactNoopUpdateQueue;
                    
                          this.state = null;
                    
                          // ReactClasses doesn't have constructors. Instead, they use the
                          // getInitialState and componentWillMount methods for initialization.
                    
                          var initialState = this.getInitialState ? this.getInitialState() : null;
                          if (process.env.NODE_ENV !== 'production') {
                            // We allow auto-mocks to proceed as if they're returning null.
                            if (
                              initialState === undefined &&
                              this.getInitialState._isMockFunction
                            ) {
                              // This is probably bad practice. Consider warning here and
                              // deprecating this convenience.
                              initialState = null;
                            }
                          }
                          _invariant(
                            typeof initialState === 'object' && !Array.isArray(initialState),
                            '%s.getInitialState(): must return an object or null',
                            Constructor.displayName || 'ReactCompositeComponent'
                          );
                    
                          this.state = initialState;
                        }
                              className="actionlink"
                              onlyActiveOnIndex={false}
                              style={Object {}}
                              to="/transactions/add">
                              Add new transaction
                    </function (props, context, updater) {
                          // This constructor gets overridden by mocks. The argument is used
                          // by mocks to assert on what gets mounted.
                    
                          if (process.env.NODE_ENV !== 'production') {
                            warning(
                              this instanceof Constructor,
                              'Something is calling a React component directly. Use a factory or ' +
                                'JSX instead. See: https://fb.me/react-legacyfactory'
                            );
                          }
                    
                          // Wire up auto-binding
                          if (this.__reactAutoBindPairs.length) {
                            bindAutoBindMethods(this);
                          }
                    
                          this.props = props;
                          this.context = context;
                          this.refs = emptyObject;
                          this.updater = updater || ReactNoopUpdateQueue;
                    
                          this.state = null;
                    
                          // ReactClasses doesn't have constructors. Instead, they use the
                          // getInitialState and componentWillMount methods for initialization.
                    
                          var initialState = this.getInitialState ? this.getInitialState() : null;
                          if (process.env.NODE_ENV !== 'production') {
                            // We allow auto-mocks to proceed as if they're returning null.
                            if (
                              initialState === undefined &&
                              this.getInitialState._isMockFunction
                            ) {
                              // This is probably bad practice. Consider warning here and
                              // deprecating this convenience.
                              initialState = null;
                            }
                          }
                          _invariant(
                            typeof initialState === 'object' && !Array.isArray(initialState),
                            '%s.getInitialState(): must return an object or null',
                            Constructor.displayName || 'ReactCompositeComponent'
                          );
                    
                          this.state = initialState;
                        }>
          </h2>
          <table
                    className="financials -transactions">
                    <thead>
                              <tr>
                                        <th
                                                  className=" filterable"
                                                  data-orderby="name-asc"
                                                  onClick={[Function bound orderBy]}>
                                                  Name
                                        </th>
                                        <th
                                                  className="activefilter"
                                                  data-orderby="date-desc"
                                                  onClick={[Function bound orderBy]}>
                                                  Date
                                        </th>
                                        <th
                                                  className=""
                                                  data-orderby="amount-asc"
                                                  onClick={[Function bound orderBy]}>
                                                  Amount
                                        </th>
                                        <th
                                                  className="actions nobor">
                                                   
                                        </th>
                                        <th
                                                  className="actions nobor">
                                                   
                                        </th>
                              </tr>
                    </thead>
                    <tbody>
                              <function Connect(props, context) {
                                      _classCallCheck(this, Connect);
                              
                                      var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));
                              
                                      _this.version = version;
                                      _this.store = props.store || context.store;
                              
                                      (0, _invariant2["default"])(_this.store, 'Could not find "store" in either the context or ' + ('props of "' + connectDisplayName + '". ') + 'Either wrap the root component in a <Provider>, ' + ('or explicitly pass "store" as a prop to "' + connectDisplayName + '".'));
                              
                                      var storeState = _this.store.getState();
                                      _this.state = { storeState: storeState };
                                      _this.clearCache();
                                      return _this;
                                    }
                                        transaction={
                                                  Object {
                                                            "__v": 0,
                                                            "_id": "58890108df9d3e0905a2d605",
                                                            "amount": 6.25,
                                                            "date": "2017-05-25T00:00:00.000Z",
                                                            "name": "Monmouth Coffee",
                                                            "user": "58c2a33cc6cd5a5d15a8fc0c"
                                                          }
                                        }
                                        transactions={
                                                  Array [
                                                            Object {
                                                              "__v": 0,
                                                              "_id": "588900efdf9d3e0905a2d604",
                                                              "amount": 4.5,
                                                              "date": "2017-05-01T00:00:00.000Z",
                                                              "name": "Cashew Nuts",
                                                              "user": "58c2a33cc6cd5a5d15a8fc0c"
                                                            },
                                                            Object {
                                                              "__v": 0,
                                                              "_id": "58890108df9d3e0905a2d605",
                                                              "amount": 6.25,
                                                              "date": "2017-05-25T00:00:00.000Z",
                                                              "name": "Monmouth Coffee",
                                                              "user": "58c2a33cc6cd5a5d15a8fc0c"
                                                            },
                                                            Object {
                                                              "__v": 0,
                                                              "_id": "588b67fbada9d2040bee4ef4",
                                                              "amount": 399,
                                                              "date": "2017-02-27T00:00:00.000Z",
                                                              "name": "Flight to Copenhagen",
                                                              "user": "58c2a33cc6cd5a5d15a8fc0c"
                                                            }
                                                          ]
                                        } />
                              <function Connect(props, context) {
                                      _classCallCheck(this, Connect);
                              
                                      var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));
                              
                                      _this.version = version;
                                      _this.store = props.store || context.store;
                              
                                      (0, _invariant2["default"])(_this.store, 'Could not find "store" in either the context or ' + ('props of "' + connectDisplayName + '". ') + 'Either wrap the root component in a <Provider>, ' + ('or explicitly pass "store" as a prop to "' + connectDisplayName + '".'));
                              
                                      var storeState = _this.store.getState();
                                      _this.state = { storeState: storeState };
                                      _this.clearCache();
                                      return _this;
                                    }
                                        transaction={
                                                  Object {
                                                            "__v": 0,
                                                            "_id": "588900efdf9d3e0905a2d604",
                                                            "amount": 4.5,
                                                            "date": "2017-05-01T00:00:00.000Z",
                                                            "name": "Cashew Nuts",
                                                            "user": "58c2a33cc6cd5a5d15a8fc0c"
                                                          }
                                        }
                                        transactions={
                                                  Array [
                                                            Object {
                                                              "__v": 0,
                                                              "_id": "588900efdf9d3e0905a2d604",
                                                              "amount": 4.5,
                                                              "date": "2017-05-01T00:00:00.000Z",
                                                              "name": "Cashew Nuts",
                                                              "user": "58c2a33cc6cd5a5d15a8fc0c"
                                                            },
                                                            Object {
                                                              "__v": 0,
                                                              "_id": "58890108df9d3e0905a2d605",
                                                              "amount": 6.25,
                                                              "date": "2017-05-25T00:00:00.000Z",
                                                              "name": "Monmouth Coffee",
                                                              "user": "58c2a33cc6cd5a5d15a8fc0c"
                                                            },
                                                            Object {
                                                              "__v": 0,
                                                              "_id": "588b67fbada9d2040bee4ef4",
                                                              "amount": 399,
                                                              "date": "2017-02-27T00:00:00.000Z",
                                                              "name": "Flight to Copenhagen",
                                                              "user": "58c2a33cc6cd5a5d15a8fc0c"
                                                            }
                                                          ]
                                        } />
                              <function Connect(props, context) {
                                      _classCallCheck(this, Connect);
                              
                                      var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));
                              
                                      _this.version = version;
                                      _this.store = props.store || context.store;
                              
                                      (0, _invariant2["default"])(_this.store, 'Could not find "store" in either the context or ' + ('props of "' + connectDisplayName + '". ') + 'Either wrap the root component in a <Provider>, ' + ('or explicitly pass "store" as a prop to "' + connectDisplayName + '".'));
                              
                                      var storeState = _this.store.getState();
                                      _this.state = { storeState: storeState };
                                      _this.clearCache();
                                      return _this;
                                    }
                                        transaction={
                                                  Object {
                                                            "__v": 0,
                                                            "_id": "588b67fbada9d2040bee4ef4",
                                                            "amount": 399,
                                                            "date": "2017-02-27T00:00:00.000Z",
                                                            "name": "Flight to Copenhagen",
                                                            "user": "58c2a33cc6cd5a5d15a8fc0c"
                                                          }
                                        }
                                        transactions={
                                                  Array [
                                                            Object {
                                                              "__v": 0,
                                                              "_id": "588900efdf9d3e0905a2d604",
                                                              "amount": 4.5,
                                                              "date": "2017-05-01T00:00:00.000Z",
                                                              "name": "Cashew Nuts",
                                                              "user": "58c2a33cc6cd5a5d15a8fc0c"
                                                            },
                                                            Object {
                                                              "__v": 0,
                                                              "_id": "58890108df9d3e0905a2d605",
                                                              "amount": 6.25,
                                                              "date": "2017-05-25T00:00:00.000Z",
                                                              "name": "Monmouth Coffee",
                                                              "user": "58c2a33cc6cd5a5d15a8fc0c"
                                                            },
                                                            Object {
                                                              "__v": 0,
                                                              "_id": "588b67fbada9d2040bee4ef4",
                                                              "amount": 399,
                                                              "date": "2017-02-27T00:00:00.000Z",
                                                              "name": "Flight to Copenhagen",
                                                              "user": "58c2a33cc6cd5a5d15a8fc0c"
                                                            }
                                                          ]
                                        } />
                    </tbody>
          </table>
</section>,
        "_debugID": 2,
        "_renderedOutput": <section
          className="transactions">
          <h2>
                    Transactions 
                    <function (props, context, updater) {
                          // This constructor gets overridden by mocks. The argument is used
                          // by mocks to assert on what gets mounted.
                    
                          if (process.env.NODE_ENV !== 'production') {
                            warning(
                              this instanceof Constructor,
                              'Something is calling a React component directly. Use a factory or ' +
                                'JSX instead. See: https://fb.me/react-legacyfactory'
                            );
                          }
                    
                          // Wire up auto-binding
                          if (this.__reactAutoBindPairs.length) {
                            bindAutoBindMethods(this);
                          }
                    
                          this.props = props;
                          this.context = context;
                          this.refs = emptyObject;
                          this.updater = updater || ReactNoopUpdateQueue;
                    
                          this.state = null;
                    
                          // ReactClasses doesn't have constructors. Instead, they use the
                          // getInitialState and componentWillMount methods for initialization.
                    
                          var initialState = this.getInitialState ? this.getInitialState() : null;
                          if (process.env.NODE_ENV !== 'production') {
                            // We allow auto-mocks to proceed as if they're returning null.
                            if (
                              initialState === undefined &&
                              this.getInitialState._isMockFunction
                            ) {
                              // This is probably bad practice. Consider warning here and
                              // deprecating this convenience.
                              initialState = null;
                            }
                          }
                          _invariant(
                            typeof initialState === 'object' && !Array.isArray(initialState),
                            '%s.getInitialState(): must return an object or null',
                            Constructor.displayName || 'ReactCompositeComponent'
                          );
                    
                          this.state = initialState;
                        }
                              className="actionlink"
                              onlyActiveOnIndex={false}
                              style={Object {}}
                              to="/transactions/add">
                              Add new transaction
                    </function (props, context, updater) {
                          // This constructor gets overridden by mocks. The argument is used
                          // by mocks to assert on what gets mounted.
                    
                          if (process.env.NODE_ENV !== 'production') {
                            warning(
                              this instanceof Constructor,
                              'Something is calling a React component directly. Use a factory or ' +
                                'JSX instead. See: https://fb.me/react-legacyfactory'
                            );
                          }
                    
                          // Wire up auto-binding
                          if (this.__reactAutoBindPairs.length) {
                            bindAutoBindMethods(this);
                          }
                    
                          this.props = props;
                          this.context = context;
                          this.refs = emptyObject;
                          this.updater = updater || ReactNoopUpdateQueue;
                    
                          this.state = null;
                    
                          // ReactClasses doesn't have constructors. Instead, they use the
                          // getInitialState and componentWillMount methods for initialization.
                    
                          var initialState = this.getInitialState ? this.getInitialState() : null;
                          if (process.env.NODE_ENV !== 'production') {
                            // We allow auto-mocks to proceed as if they're returning null.
                            if (
                              initialState === undefined &&
                              this.getInitialState._isMockFunction
                            ) {
                              // This is probably bad practice. Consider warning here and
                              // deprecating this convenience.
                              initialState = null;
                            }
                          }
                          _invariant(
                            typeof initialState === 'object' && !Array.isArray(initialState),
                            '%s.getInitialState(): must return an object or null',
                            Constructor.displayName || 'ReactCompositeComponent'
                          );
                    
                          this.state = initialState;
                        }>
          </h2>
          <table
                    className="financials -transactions">
                    <thead>
                              <tr>
                                        <th
                                                  className=" filterable"
                                                  data-orderby="name-asc"
                                                  onClick={[Function bound orderBy]}>
                                                  Name
                                        </th>
                                        <th
                                                  className="activefilter"
                                                  data-orderby="date-desc"
                                                  onClick={[Function bound orderBy]}>
                                                  Date
                                        </th>
                                        <th
                                                  className=""
                                                  data-orderby="amount-asc"
                                                  onClick={[Function bound orderBy]}>
                                                  Amount
                                        </th>
                                        <th
                                                  className="actions nobor">
                                                   
                                        </th>
                                        <th
                                                  className="actions nobor">
                                                   
                                        </th>
                              </tr>
                    </thead>
                    <tbody>
                              <function Connect(props, context) {
                                      _classCallCheck(this, Connect);
                              
                                      var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));
                              
                                      _this.version = version;
                                      _this.store = props.store || context.store;
                              
                                      (0, _invariant2["default"])(_this.store, 'Could not find "store" in either the context or ' + ('props of "' + connectDisplayName + '". ') + 'Either wrap the root component in a <Provider>, ' + ('or explicitly pass "store" as a prop to "' + connectDisplayName + '".'));
                              
                                      var storeState = _this.store.getState();
                                      _this.state = { storeState: storeState };
                                      _this.clearCache();
                                      return _this;
                                    }
                                        transaction={
                                                  Object {
                                                            "__v": 0,
                                                            "_id": "58890108df9d3e0905a2d605",
                                                            "amount": 6.25,
                                                            "date": "2017-05-25T00:00:00.000Z",
                                                            "name": "Monmouth Coffee",
                                                            "user": "58c2a33cc6cd5a5d15a8fc0c"
                                                          }
                                        }
                                        transactions={
                                                  Array [
                                                            Object {
                                                              "__v": 0,
                                                              "_id": "588900efdf9d3e0905a2d604",
                                                              "amount": 4.5,
                                                              "date": "2017-05-01T00:00:00.000Z",
                                                              "name": "Cashew Nuts",
                                                              "user": "58c2a33cc6cd5a5d15a8fc0c"
                                                            },
                                                            Object {
                                                              "__v": 0,
                                                              "_id": "58890108df9d3e0905a2d605",
                                                              "amount": 6.25,
                                                              "date": "2017-05-25T00:00:00.000Z",
                                                              "name": "Monmouth Coffee",
                                                              "user": "58c2a33cc6cd5a5d15a8fc0c"
                                                            },
                                                            Object {
                                                              "__v": 0,
                                                              "_id": "588b67fbada9d2040bee4ef4",
                                                              "amount": 399,
                                                              "date": "2017-02-27T00:00:00.000Z",
                                                              "name": "Flight to Copenhagen",
                                                              "user": "58c2a33cc6cd5a5d15a8fc0c"
                                                            }
                                                          ]
                                        } />
                              <function Connect(props, context) {
                                      _classCallCheck(this, Connect);
                              
                                      var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));
                              
                                      _this.version = version;
                                      _this.store = props.store || context.store;
                              
                                      (0, _invariant2["default"])(_this.store, 'Could not find "store" in either the context or ' + ('props of "' + connectDisplayName + '". ') + 'Either wrap the root component in a <Provider>, ' + ('or explicitly pass "store" as a prop to "' + connectDisplayName + '".'));
                              
                                      var storeState = _this.store.getState();
                                      _this.state = { storeState: storeState };
                                      _this.clearCache();
                                      return _this;
                                    }
                                        transaction={
                                                  Object {
                                                            "__v": 0,
                                                            "_id": "588900efdf9d3e0905a2d604",
                                                            "amount": 4.5,
                                                            "date": "2017-05-01T00:00:00.000Z",
                                                            "name": "Cashew Nuts",
                                                            "user": "58c2a33cc6cd5a5d15a8fc0c"
                                                          }
                                        }
                                        transactions={
                                                  Array [
                                                            Object {
                                                              "__v": 0,
                                                              "_id": "588900efdf9d3e0905a2d604",
                                                              "amount": 4.5,
                                                              "date": "2017-05-01T00:00:00.000Z",
                                                              "name": "Cashew Nuts",
                                                              "user": "58c2a33cc6cd5a5d15a8fc0c"
                                                            },
                                                            Object {
                                                              "__v": 0,
                                                              "_id": "58890108df9d3e0905a2d605",
                                                              "amount": 6.25,
                                                              "date": "2017-05-25T00:00:00.000Z",
                                                              "name": "Monmouth Coffee",
                                                              "user": "58c2a33cc6cd5a5d15a8fc0c"
                                                            },
                                                            Object {
                                                              "__v": 0,
                                                              "_id": "588b67fbada9d2040bee4ef4",
                                                              "amount": 399,
                                                              "date": "2017-02-27T00:00:00.000Z",
                                                              "name": "Flight to Copenhagen",
                                                              "user": "58c2a33cc6cd5a5d15a8fc0c"
                                                            }
                                                          ]
                                        } />
                              <function Connect(props, context) {
                                      _classCallCheck(this, Connect);
                              
                                      var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));
                              
                                      _this.version = version;
                                      _this.store = props.store || context.store;
                              
                                      (0, _invariant2["default"])(_this.store, 'Could not find "store" in either the context or ' + ('props of "' + connectDisplayName + '". ') + 'Either wrap the root component in a <Provider>, ' + ('or explicitly pass "store" as a prop to "' + connectDisplayName + '".'));
                              
                                      var storeState = _this.store.getState();
                                      _this.state = { storeState: storeState };
                                      _this.clearCache();
                                      return _this;
                                    }
                                        transaction={
                                                  Object {
                                                            "__v": 0,
                                                            "_id": "588b67fbada9d2040bee4ef4",
                                                            "amount": 399,
                                                            "date": "2017-02-27T00:00:00.000Z",
                                                            "name": "Flight to Copenhagen",
                                                            "user": "58c2a33cc6cd5a5d15a8fc0c"
                                                          }
                                        }
                                        transactions={
                                                  Array [
                                                            Object {
                                                              "__v": 0,
                                                              "_id": "588900efdf9d3e0905a2d604",
                                                              "amount": 4.5,
                                                              "date": "2017-05-01T00:00:00.000Z",
                                                              "name": "Cashew Nuts",
                                                              "user": "58c2a33cc6cd5a5d15a8fc0c"
                                                            },
                                                            Object {
                                                              "__v": 0,
                                                              "_id": "58890108df9d3e0905a2d605",
                                                              "amount": 6.25,
                                                              "date": "2017-05-25T00:00:00.000Z",
                                                              "name": "Monmouth Coffee",
                                                              "user": "58c2a33cc6cd5a5d15a8fc0c"
                                                            },
                                                            Object {
                                                              "__v": 0,
                                                              "_id": "588b67fbada9d2040bee4ef4",
                                                              "amount": 399,
                                                              "date": "2017-02-27T00:00:00.000Z",
                                                              "name": "Flight to Copenhagen",
                                                              "user": "58c2a33cc6cd5a5d15a8fc0c"
                                                            }
                                                          ]
                                        } />
                    </tbody>
          </table>
</section>
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false
    },
    "getRenderOutput": [Function getRenderOutput],
    "render": [Function render]
  },
  "root": [Circular],
  "unrendered": <function Transactions(props) {/* istanbul ignore next */_classCallCheck(this, Transactions);var _this = _possibleConstructorReturn(this, (Transactions.__proto__ || Object.getPrototypeOf(Transactions)).call(this,
    props));

    /* istanbul ignore next */_this.state = {
      orderBy: 'date-desc' };


    /* istanbul ignore next */_this.orderBy = /* istanbul ignore next */_this.orderBy.bind( /* istanbul ignore next */_this); /* istanbul ignore next */return _this;
  }
    transactions={
        Array [
            Object {
              "__v": 0,
              "_id": "588900efdf9d3e0905a2d604",
              "amount": 4.5,
              "date": "2017-05-01T00:00:00.000Z",
              "name": "Cashew Nuts",
              "user": "58c2a33cc6cd5a5d15a8fc0c"
            },
            Object {
              "__v": 0,
              "_id": "58890108df9d3e0905a2d605",
              "amount": 6.25,
              "date": "2017-05-25T00:00:00.000Z",
              "name": "Monmouth Coffee",
              "user": "58c2a33cc6cd5a5d15a8fc0c"
            },
            Object {
              "__v": 0,
              "_id": "588b67fbada9d2040bee4ef4",
              "amount": 399,
              "date": "2017-02-27T00:00:00.000Z",
              "name": "Flight to Copenhagen",
              "user": "58c2a33cc6cd5a5d15a8fc0c"
            }
          ]
    } />
}
`;
